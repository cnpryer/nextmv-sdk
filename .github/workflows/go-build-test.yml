name: go build & test
on: [push]
jobs:
  sdk-go-build-test:
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: github.com/nextmv-io/*
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      RESOURCES: resources
      NEXTMV_LIBRARY_PATH: ~/.nextmv/lib
      GOVERSION: 1.19.2
    # Use a matrix strategy to test all the modules simultaneously.
    strategy:
      fail-fast: false
      matrix:
        MOD_PATH:
          [./, ./route/google, ./route/here, ./route/osrm, ./route/routingkit]
    steps:
      # Installs dependencies.
      - name: install dependencies linux
        run: |
          # jq
          sudo apt-get install jq

          # yq
          wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.27.2/yq_linux_amd64
          chmod a+x /usr/local/bin/yq

          # cmake for act locally
          # sudo apt-get update && apt-get -y install cmake protobuf-compiler

      - name: set up go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOVERSION }}
        id: go

      - name: setup SSH Keys and known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.NEXTMVBOT_SSH_KEY }}"

      - name: use ssh instead of https for git
        run: git config --global url."git@github.com:".insteadOf "https://github.com/"

      - name: initialize local branch name
        run: echo "LOCAL_BRANCH=${{ github.head_ref || github.ref_name }}" >> $GITHUB_ENV

      # Gets the token and stores it in a variable.
      - name: export local branch
        run: echo "BRANCH_CHECK=$(git ls-remote --heads https://github.com/nextmv-io/platform ${{ env.LOCAL_BRANCH }})" >> $GITHUB_ENV

      # We always want to fall back to develop, even when the branch is stable,
      # which means we are syncing a hotfix back on to develop.
      - name: override with develop if empty
        if: ${{ env.BRANCH_CHECK == '' || github.ref_name == 'stable' }}
        run: echo "LOCAL_BRANCH=develop" >> $GITHUB_ENV

      - name: git clone
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: clone platform repository 
        uses: actions/checkout@v3
        with:
          repository: nextmv-io/platform
          path: ${{ env.RESOURCES }}
          ref: ${{ env.LOCAL_BRANCH }}
          ssh-key: ${{ secrets.NEXTMVBOT_SSH_KEY }}
          ssh-known-hosts: ssh-keyscan github.com
          lfs: true

      - name: export sdk path used in this action
        run: echo "SDK_PATH=$(pwd)" >> $GITHUB_ENV

      - name: build plugins
        run: |

          # To get testing working, the dependency that platform uses for sdk
          # is replaced for the local sdk repo checked out in this action.
          go mod edit -replace=github.com/nextmv-io/sdk=${{env.SDK_PATH}}

          # Build the plugins.
          REMOVE_TRIMPATH=1 \
            NEXTMV_LIBRARY_PATH=${{ env.NEXTMV_LIBRARY_PATH }} \
            GOVERSION=${{ env.GOVERSION }} \
            bash scripts/build-plugins.sh > /dev/null 2>&1
        working-directory: ${{env.RESOURCES}}

      - name: go build
        run: go build -v ./...
        working-directory: ${{ matrix.MOD_PATH }}

      - name: go test
        run: NEXTMV_LIBRARY_PATH=${{ env.NEXTMV_LIBRARY_PATH }} NEXTMV_TOKEN=${{ secrets.NEXTMV_TOKEN }} go test ./...
        working-directory: ${{ matrix.MOD_PATH }}
